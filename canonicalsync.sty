%% 
%% Canoncial Synchroniser
%% 
%% This is a package originally designed to automatically synchronise 
%% a local working copy of the canonical math package, but it should
%% work the same with other package.
%% 
%% Copyright (C) 2012 Jan-Bernhard Korda√ü
%%
%% This program is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program.  If not, see <http://www.gnu.org/licenses/>.
%% 

\ProvidesPackage{canonicalsync}

\RequirePackage{xifthen}


% update functionality

\newcommand{\CsUsePackage}[2][]{
  % check if there is a sync path given
  \ifthenelse{\isempty{#1}}{
    \RequirePackage{#2}
  }{
    % lets see if the update functionality can be used (all relevant files exist}
    \IfFileExists{#1/#2.sty}{
      % Check if shell escape is enabled, if not tex cant copy anything
      \ifnum\pdfshellescape=1

      % lets see if the package file is already in your document folder
      \IfFileExists{#2.sty}{
        % now lets have a look if the other .sty file is newer
        \ifnum\pdfstrcmp{\pdffilemoddate{#1/#2.sty}}{\pdffilemoddate{./#2.sty}}>0
        % it is, so break out and try to copy from commandline
        {\immediate\write18{cp #1/#2.sty #2.sty}}
        % \PackageWarning{The #2 package file has been updated. Please rerun pdflatex if you are using updated functionality.}
        \fi
      }{
        % the development repository file exists, but it is not yet in your document folder
        % lets create it then
        {\immediate\write18{cp #1/#2.sty #2.sty}}
      }
      % everything should be in the right place now, so require package
      \RequirePackage{#2}

      % shell escape is turned of, the only thing we can do now is inform
      \else

      % check if there really is a newer development version
      \ifnum\pdfstrcmp{\pdffilemoddate{#1/#2.sty}}{\pdffilemoddate{./#2.sty}}>0
      {\PackageWarning{canonicalsync}{The development package file (#2) is newer, enable shell escape or do an update manually.}}
      \else
      {\PackageWarning{canonicalsync}{You specified the location of a development repository but did not enabled shell escape. To use the synchronisation feature you will need to enable this by using the -shell-escape option running latex}}
      \fi

      % Though shell escape is not working, require package anyway
      \RequirePackage{#2}

      \fi
    }{
      \PackageWarning{canonicalsync}{The package file (#2) was not found at the given location (#1). Please specify a valid development location if you intended to use the synchronisation feature.}
    }
  }
}